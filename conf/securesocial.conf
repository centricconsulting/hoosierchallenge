securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/login

    #
    # Enable SSL 
    #
    ssl=false   

    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    assetsController=controllers.ReverseMyCustomAssetsController

    cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeOutInMinutes=720
    }

    # Note: additional provider information available here: http://securesocial.ws/guide/configuration.html
    # Note: clientId and clientSecret below are a generic sample set, these must be changed for your
    #       implementation
	google {
	    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
	    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
	    clientId=874359735691.apps.googleusercontent.com
	    clientSecret=Aa91qu2bQ0pZ4h6lFgx8RIbL
	    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}
}